> lintr::lint_package()

Running linters ¦¦¦¦¦¦¦¦¦¦¦¦¦                     40% | ETA:  4s

Running linters ¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦            70% | ETA:  1s

Running linters ¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦      90% | ETA:  0s

                                                                
inst/archive/learner_cmprsk_crr-20250331.R:1:3: style: [commented_code_linter] Remove commented code.
# File: R/learner_cmprsk_crr.R
  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
inst/archive/learner_cmprsk_crr-20250331.R:73:81: style: [line_length_linter] Lines should not be more than 80 characters. This line is 95 characters.
#' # system.file("examples/example-cov2-variations.R", package = "LearnerCompRisksFineGrayCRR")
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~
inst/archive/learner_cmprsk_crr-20250331.R:74:1: style: [object_name_linter] Variable and function name style should match snake_case or symbols.
LearnerCompRisksFineGrayCRR <- R6::R6Class("LearnerCompRisksFineGrayCRR",
^~~~~~~~~~~~~~~~~~~~~~~~~~~
inst/archive/learner_cmprsk_crr-20250331.R:78:81: style: [line_length_linter] Lines should not be more than 80 characters. This line is 86 characters.
    #' Initializes a new instance of the Fine-Gray Competing Risks Regression Learner.
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~
inst/archive/learner_cmprsk_crr-20250331.R:81:81: style: [line_length_linter] Lines should not be more than 80 characters. This line is 82 characters.
    #' Optional configuration for time-varying covariates, enabling the learner to
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~
inst/archive/learner_cmprsk_crr-20250331.R:83:81: style: [line_length_linter] Lines should not be more than 80 characters. This line is 86 characters.
    #' covariates are treated as fixed effects. When provided, this list must contain:
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~
inst/archive/learner_cmprsk_crr-20250331.R:86:81: style: [line_length_linter] Lines should not be more than 80 characters. This line is 81 characters.
    #'     A vector of covariate names from the task's feature set that should be
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
inst/archive/learner_cmprsk_crr-20250331.R:90:81: style: [line_length_linter] Lines should not be more than 80 characters. This line is 82 characters.
    #'     A user-defined function specifying how the covariates in 'cov2nms' vary
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~
inst/archive/learner_cmprsk_crr-20250331.R:92:81: style: [line_length_linter] Lines should not be more than 80 characters. This line is 83 characters.
    #'     failure times from the training data). The function must return a matrix
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~
inst/archive/learner_cmprsk_crr-20250331.R:94:81: style: [line_length_linter] Lines should not be more than 80 characters. This line is 83 characters.
    #'     - 'nrow = length(uft)' (matching the number of unique failure times).\cr
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~
inst/archive/learner_cmprsk_crr-20250331.R:96:81: style: [line_length_linter] Lines should not be more than 80 characters. This line is 83 characters.
    #'       from 'cov2nms' via 'model.matrix'), where each column corresponds to a
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~
inst/archive/learner_cmprsk_crr-20250331.R:98:81: style: [line_length_linter] Lines should not be more than 80 characters. This line is 81 characters.
    #'     Example: 'function(uft) log(uft)' applies a logarithmic transformation
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
inst/archive/learner_cmprsk_crr-20250331.R:104:81: style: [line_length_linter] Lines should not be more than 80 characters. This line is 82 characters.
    #'     (default), all features in the task contribute to 'cov1', and 'cov2nms'
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~
inst/archive/learner_cmprsk_crr-20250331.R:113:81: style: [line_length_linter] Lines should not be more than 80 characters. This line is 81 characters.
        if (!is.character(cov2_info$cov2nms) || length(cov2_info$cov2nms) == 0) {
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
inst/archive/learner_cmprsk_crr-20250331.R:120:81: style: [line_length_linter] Lines should not be more than 80 characters. This line is 100 characters.
          if (!is.character(cov2_info$cov2only)) stop("cov2only must be a character vector or NULL")
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~
inst/archive/learner_cmprsk_crr-20250331.R:129:81: style: [line_length_linter] Lines should not be more than 80 characters. This line is 91 characters.
        maxiter = paradox::p_int(default = 100L, lower = 1L, upper = 1000L, tags = "train")
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~
inst/archive/learner_cmprsk_crr-20250331.R:159:81: style: [line_length_linter] Lines should not be more than 80 characters. This line is 81 characters.
        formula <- as.formula(paste("~", paste(cov1_features, collapse = " + ")))
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
inst/archive/learner_cmprsk_crr-20250331.R:175:81: style: [line_length_linter] Lines should not be more than 80 characters. This line is 88 characters.
          model.matrix(as.formula(paste("~", nm)), data = full_data)[, -1, drop = FALSE]
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~
inst/archive/learner_cmprsk_crr-20250331.R:183:81: style: [line_length_linter] Lines should not be more than 80 characters. This line is 103 characters.
        if (nrow(tf_out) != length(uft)) stop("tf output must have rows equal to unique failure times")
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~
inst/archive/learner_cmprsk_crr-20250331.R:185:81: style: [line_length_linter] Lines should not be more than 80 characters. This line is 113 characters.
          stop(sprintf("tf must return a matrix with %d columns (matching cov2 columns)", ncol(as.matrix(cov2))))
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
inst/archive/learner_cmprsk_crr-20250331.R:206:81: style: [line_length_linter] Lines should not be more than 80 characters. This line is 96 characters.
            cmprsk::crr(ftime, fstatus, cov1, failcode = as.integer(target_event), cencode = 0L)
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~
inst/archive/learner_cmprsk_crr-20250331.R:208:81: style: [line_length_linter] Lines should not be more than 80 characters. This line is 112 characters.
            cmprsk::crr(ftime, fstatus, cov1, cov2, tf_final, failcode = as.integer(target_event), cencode = 0L)
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
inst/archive/learner_cmprsk_crr-20250331.R:211:81: style: [line_length_linter] Lines should not be more than 80 characters. This line is 90 characters.
          stop(sprintf("Failed to train model for event %s: %s", target_event, e$message))
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~
inst/archive/learner_cmprsk_crr-20250331.R:222:81: style: [line_length_linter] Lines should not be more than 80 characters. This line is 86 characters.
      self$state$cov2_names <- if (!is.null(cov2)) colnames(as.matrix(cov2)) else NULL
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~
inst/archive/learner_cmprsk_crr-20250331.R:224:1: style: [trailing_whitespace_linter] Remove trailing whitespace.
      
^~~~~~
inst/archive/learner_cmprsk_crr-20250331.R:239:81: style: [line_length_linter] Lines should not be more than 80 characters. This line is 81 characters.
        formula <- as.formula(paste("~", paste(cov1_features, collapse = " + ")))
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
inst/archive/learner_cmprsk_crr-20250331.R:249:81: style: [line_length_linter] Lines should not be more than 80 characters. This line is 86 characters.
          model.matrix(as.formula(paste("~", nm)), data = newdata)[, -1, drop = FALSE]
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~
inst/archive/learner_cmprsk_crr-20250331.R:265:81: style: [line_length_linter] Lines should not be more than 80 characters. This line is 83 characters.
        if (is.null(model)) stop(sprintf("No model available for event %s", event))
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~
inst/archive/learner_cmprsk_crr-20250331.R:267:81: style: [line_length_linter] Lines should not be more than 80 characters. This line is 89 characters.
          pred_raw <- predict(model, cov1 = cov1, cov2 = cov2, tf = tf, time = all_times)
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~
inst/archive/learner_cmprsk_crr-20250331.R:275:81: style: [line_length_linter] Lines should not be more than 80 characters. This line is 89 characters.
            if (any(is.na(time_idx))) stop("Predicted times do not match training times")
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~
inst/archive/learner_cmprsk_crr-20250331.R:295:2: style: [trailing_blank_lines_linter] Add a terminal newline.
)
 ^
inst/examples/example1-aalen.R:8:6: style: [assignment_linter] Use one of <-, <<- for assignment, not =.
task = tsk("pbc")
     ^
inst/examples/example1-aalen.R:15:6: style: [assignment_linter] Use one of <-, <<- for assignment, not =.
part = partition(task, ratio=0.7)
     ^
inst/examples/example1-aalen.R:15:29: style: [infix_spaces_linter] Put spaces around all infix operators.
part = partition(task, ratio=0.7)
                            ^
inst/examples/example1-aalen.R:17:9: style: [assignment_linter] Use one of <-, <<- for assignment, not =.
learner = lrn("cmprsk.aalen")
        ^
inst/examples/example1-aalen.R:24:6: style: [assignment_linter] Use one of <-, <<- for assignment, not =.
pred = learner$train(task, part$train)$predict(task, part$test)
     ^
inst/examples/example1-aalen.R:31:9: style: [assignment_linter] Use one of <-, <<- for assignment, not =.
pred_dt = as.data.table(pred)
        ^
inst/examples/example1-aalen.R:34:62: style: [trailing_whitespace_linter] Remove trailing whitespace.
# Expand all rows into wide format with CIF1 and CIF2 columns 
                                                             ^
inst/examples/example1-aalen.R:36:81: style: [line_length_linter] Lines should not be more than 80 characters. This line is 84 characters.
  cif_list <- CIF[[1]]                              # Extract the list from each row
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~
inst/examples/example1-aalen.R:44:1: style: [trailing_blank_lines_linter] Remove trailing blank lines.

^
inst/examples/example1-aalen.R:45:1: style: [trailing_blank_lines_linter] Remove trailing blank lines.

^
inst/examples/example1-aalen.R:46:1: style: [trailing_blank_lines_linter] Remove trailing blank lines.

^
inst/examples/example1-aalen.R:47:1: style: [trailing_blank_lines_linter] Remove trailing blank lines.

^
inst/examples/example2-cov1only.R:9:6: style: [assignment_linter] Use one of <-, <<- for assignment, not =.
task = tsk("pbc")
     ^
inst/examples/example2-cov1only.R:16:6: style: [assignment_linter] Use one of <-, <<- for assignment, not =.
part = partition(task, ratio=0.7)
     ^
inst/examples/example2-cov1only.R:16:29: style: [infix_spaces_linter] Put spaces around all infix operators.
part = partition(task, ratio=0.7)
                            ^
inst/examples/example2-cov1only.R:19:1: style: [trailing_whitespace_linter] Remove trailing whitespace.
 
^
inst/examples/example2-cov1only.R:20:13: style: [assignment_linter] Use one of <-, <<- for assignment, not =.
crr_learner = lrn("cmprsk.crr")
            ^
inst/examples/example2-cov1only.R:26:6: style: [assignment_linter] Use one of <-, <<- for assignment, not =.
pred = crr_learner$train(task, part$train)$predict(task, part$test)
     ^
inst/examples/example2-cov1only.R:28:35: style: [trailing_whitespace_linter] Remove trailing whitespace.
cat("\n -- CIF list structure \n") 
                                  ^
inst/examples/example3-cov2-variations.R:1:81: style: [line_length_linter] Lines should not be more than 80 characters. This line is 84 characters.
# Example usage of LearnerCompRisksFineGrayCRR with various cov2_info configurations
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~
inst/examples/example3-cov2-variations.R:33:81: style: [line_length_linter] Lines should not be more than 80 characters. This line is 88 characters.
cat("\n -- FG Model 2: Numeric predictors with a two-column transformation function \n")
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~
inst/examples/example3-cov2-variations.R:45:81: style: [line_length_linter] Lines should not be more than 80 characters. This line is 96 characters.
cat("\n -- FG Model 3:  Mixed numeric and factor variables with a two-column transformation \n")
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~
inst/examples/example4-crr-compare.R:17:4: style: [assignment_linter] Use one of <-, <<- for assignment, not =.
tf = function(uft){
   ^
inst/examples/example4-crr-compare.R:17:19: style: [brace_linter] There should be a space before an opening curly brace.
tf = function(uft){
                  ^
inst/examples/example4-crr-compare.R:17:19: style: [paren_body_linter] Put a space between a right parenthesis and a body expression.
tf = function(uft){
                  ^
inst/examples/example4-crr-compare.R:18:4: style: [indentation_linter] Indentation should be 2 spaces but is 4 spaces.
    tmtx =cbind(uft, uft)
  ~^
inst/examples/example4-crr-compare.R:18:10: style: [assignment_linter] Use one of <-, <<- for assignment, not =.
    tmtx =cbind(uft, uft)
         ^
inst/examples/example4-crr-compare.R:18:10: style: [infix_spaces_linter] Put spaces around all infix operators.
    tmtx =cbind(uft, uft)
         ^
inst/examples/example4-crr-compare.R:19:20: style: [assignment_linter] Use one of <-, <<- for assignment, not =.
    colnames(tmtx) = c("tm_lin", "tm_lin")
                   ^
inst/examples/example4-crr-compare.R:21:4: style: [indentation_linter] Indentation should be 0 spaces but is 4 spaces.
    }
~~~^
inst/examples/example4-crr-compare.R:22:1: style: [trailing_whitespace_linter] Remove trailing whitespace.
    
^~~~
inst/examples/example4-crr-compare.R:26:23: style: [commas_linter] Put a space after a comma.
    cov2nms = c("sex","bili"),
                      ^
inst/examples/example4-crr-compare.R:31:81: style: [line_length_linter] Lines should not be more than 80 characters. This line is 101 characters.
cat("\n -- FG Model (mlr3):  Mixed numeric and factor variables with a two-column transformation \n")
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~
inst/examples/example4-crr-compare.R:37:4: style: [assignment_linter] Use one of <-, <<- for assignment, not =.
dt = as.data.table(task)
   ^
inst/examples/example4-crr-compare.R:38:6: style: [assignment_linter] Use one of <-, <<- for assignment, not =.
time = dt$time
     ^
inst/examples/example4-crr-compare.R:39:8: style: [assignment_linter] Use one of <-, <<- for assignment, not =.
status = dt$status
       ^
inst/examples/example4-crr-compare.R:40:6: style: [assignment_linter] Use one of <-, <<- for assignment, not =.
cov1 = model.matrix(~ age + bili + sex, data = dt)[,-1]
     ^
inst/examples/example4-crr-compare.R:40:53: style: [commas_linter] Put a space after a comma.
cov1 = model.matrix(~ age + bili + sex, data = dt)[,-1]
                                                    ^
inst/examples/example4-crr-compare.R:41:6: style: [assignment_linter] Use one of <-, <<- for assignment, not =.
cov2 = model.matrix(~ sex + bili, data = dt)[, -1]
     ^
inst/examples/example4-crr-compare.R:44:36: style: [commas_linter] Put a space after a comma.
print(crr(time, status, cov1, cov2,tf, failcode=1))
                                   ^
inst/examples/example4-crr-compare.R:44:48: style: [infix_spaces_linter] Put spaces around all infix operators.
print(crr(time, status, cov1, cov2,tf, failcode=1))
                                               ^
inst/examples/example4-crr-compare.R:47:30: style: [commas_linter] Put a space after a comma.
crr(time, status, cov1, cov2,tf, failcode=2)
                             ^
inst/examples/example4-crr-compare.R:47:42: style: [infix_spaces_linter] Put spaces around all infix operators.
crr(time, status, cov1, cov2,tf, failcode=2)
                                         ^
inst/examples/example4-crr-compare.R:47:45: style: [trailing_blank_lines_linter] Add a terminal newline.
crr(time, status, cov1, cov2,tf, failcode=2)
                                            ^
inst/examples/example5-tests.R:1:1: error: [error] Invalid multibyte string. Is the encoding correct?

^
R/learner_cmprsk_crr.R:13:81: style: [line_length_linter] Lines should not be more than 80 characters. This line is 526 characters.
#' The learner uses the \code{\link[cmprsk:crr]{cmprsk::crr}} function from the \code{cmprsk} package to fit a Fine-Gray competing risks regression model. This model estimates cumulative incidence functions (CIFs) for competing risks scenarios with multiple mutually exclusive events, supporting both fixed and time-varying covariates. The \code{\link[cmprsk:predict.crr]{cmprsk::predict.crr}} function is used to generate predictions, providing CIFs for specified event types across unique event times from the training data.
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
R/learner_cmprsk_crr.R:17:81: style: [line_length_linter] Lines should not be more than 80 characters. This line is 118 characters.
#'   \item{`convergence()`}{Returns a named list indicating convergence status for each event model (`TRUE`/`FALSE`).}
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
R/learner_cmprsk_crr.R:18:81: style: [line_length_linter] Lines should not be more than 80 characters. This line is 144 characters.
#'   \item{`importance()`}{Returns a data frame with coefficient-based variable importance for each event, scaled by absolute coefficient sums.}
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
R/learner_cmprsk_crr.R:22:81: style: [line_length_linter] Lines should not be more than 80 characters. This line is 90 characters.
#' Fine, J. P., & Gray, R. J. (1999). A Proportional Hazards Model for the Subdistribution
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~
R/learner_cmprsk_crr.R:23:81: style: [line_length_linter] Lines should not be more than 80 characters. This line is 98 characters.
#' of a Competing Risk. \emph{Journal of the American Statistical Association}, 94(446), 496--509.
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~
R/learner_cmprsk_crr.R:48:1: style: [object_name_linter] Variable and function name style should match snake_case or symbols.
LearnerCompRisksFineGrayCRR <- R6::R6Class("LearnerCompRisksFineGrayCRR",
^~~~~~~~~~~~~~~~~~~~~~~~~~~
R/learner_cmprsk_crr.R:55:81: style: [line_length_linter] Lines should not be more than 80 characters. This line is 541 characters.
    #' Configuration for time-varying covariates in the Fine-Gray model. If `NULL` (default), all covariates in the task are treated as fixed and included in the `cov1` matrix passed to \code{\link[cmprsk:crr]{cmprsk::crr}}. When specified, `cov2_info` identifies covariates with time-varying effects (included in the `cov2` matrix) and defines how these effects vary over time. This enables modeling of covariate effects that change with time, such as a covariate multiplied by a function of time (e.g., `log(time)`). The list must contain:
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
R/learner_cmprsk_crr.R:58:81: style: [line_length_linter] Lines should not be more than 80 characters. This line is 255 characters.
    #'     Names of covariates from the task's feature set to treat as time-varying. These covariates contribute to the `cov2` matrix in \code{\link[cmprsk:crr]{cmprsk::crr}}. Must be a non-empty character vector and a subset of the task's feature names.}
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
R/learner_cmprsk_crr.R:60:81: style: [line_length_linter] Lines should not be more than 80 characters. This line is 429 characters.
    #'     A function specifying the time-varying effect, taking a numeric vector `uft` (unique failure times from the training data) and returning a matrix with `nrow = length(uft)` and `ncol` equal to the number of columns in the `cov2` matrix (derived from `cov2nms`). For example, `function(uft) log(uft)` applies a logarithmic time transformation, or `function(uft) cbind(log(uft), uft^2)` applies multiple transformations.}
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
R/learner_cmprsk_crr.R:62:81: style: [line_length_linter] Lines should not be more than 80 characters. This line is 283 characters.
    #'     Optional subset of `cov2nms` specifying covariates to be used only in `cov2` (time-varying effects) and excluded from `cov1` (fixed effects). If `NULL` (default), all task features contribute to `cov1` unless listed in `cov2only`. Must be a subset of `cov2nms` or `NULL`.}
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
R/learner_cmprsk_crr.R:64:81: style: [line_length_linter] Lines should not be more than 80 characters. This line is 142 characters.
    #' Example: To model the `age` covariate with a time-varying effect proportional to `log(time)` and exclude `sex` from fixed effects, use:
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
R/learner_cmprsk_crr.R:72:81: style: [line_length_linter] Lines should not be more than 80 characters. This line is 146 characters.
    #' This configuration includes `age` in both `cov1` (fixed effects) and `cov2` (time-varying effects), while `sex` is included only in `cov2`.
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
R/learner_cmprsk_crr.R:74:81: style: [line_length_linter] Lines should not be more than 80 characters. This line is 149 characters.
    #' Maximum number of iterations for the \code{\link[cmprsk:crr]{cmprsk::crr}} optimization algorithm. Default is 100, must be between 1 and 1000.
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
R/learner_cmprsk_crr.R:76:81: style: [line_length_linter] Lines should not be more than 80 characters. This line is 135 characters.
    #' Convergence tolerance for the gradient in \code{\link[cmprsk:crr]{cmprsk::crr}}. Default is 1e-6, must be between 1e-9 and 1e-3.
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
R/learner_cmprsk_crr.R:78:81: style: [line_length_linter] Lines should not be more than 80 characters. This line is 224 characters.
    #' Whether to use parallel processing for fitting models for multiple events using \code{\link[future.apply:future_lapply]{future.apply::future_lapply}}. Default is \code{FALSE}. Requires the \code{future.apply} package.
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
R/learner_cmprsk_crr.R:79:81: style: [line_length_linter] Lines should not be more than 80 characters. This line is 92 characters.
    initialize = function(cov2_info = NULL, maxiter = 100L, gtol = 1e-6, parallel = FALSE) {
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~
R/learner_cmprsk_crr.R:85:81: style: [line_length_linter] Lines should not be more than 80 characters. This line is 81 characters.
        if (!is.character(cov2_info$cov2nms) || length(cov2_info$cov2nms) == 0) {
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
R/learner_cmprsk_crr.R:92:81: style: [line_length_linter] Lines should not be more than 80 characters. This line is 100 characters.
          if (!is.character(cov2_info$cov2only)) stop("cov2only must be a character vector or NULL")
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~
R/learner_cmprsk_crr.R:101:81: style: [line_length_linter] Lines should not be more than 80 characters. This line is 92 characters.
        maxiter = paradox::p_int(default = 100L, lower = 1L, upper = 1000L, tags = "train"),
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~
R/learner_cmprsk_crr.R:102:81: style: [line_length_linter] Lines should not be more than 80 characters. This line is 90 characters.
        gtol = paradox::p_dbl(default = 1e-6, lower = 1e-9, upper = 1e-3, tags = "train"),
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~
R/learner_cmprsk_crr.R:163:81: style: [line_length_linter] Lines should not be more than 80 characters. This line is 81 characters.
      if (!is.numeric(full_data[[time_col]])) stop("Time column must be numeric")
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
R/learner_cmprsk_crr.R:171:81: style: [line_length_linter] Lines should not be more than 80 characters. This line is 81 characters.
        formula <- as.formula(paste("~", paste(cov1_features, collapse = " + ")))
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
R/learner_cmprsk_crr.R:185:81: style: [line_length_linter] Lines should not be more than 80 characters. This line is 101 characters.
          if (!nm %in% features) stop(sprintf("cov2nms element '%s' not found in task features", nm))
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~
R/learner_cmprsk_crr.R:187:81: style: [line_length_linter] Lines should not be more than 80 characters. This line is 81 characters.
        cov2_formulas <- lapply(cov2nms, function(nm) as.formula(paste("~", nm)))
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
R/learner_cmprsk_crr.R:188:81: style: [line_length_linter] Lines should not be more than 80 characters. This line is 109 characters.
        cov2_list <- lapply(cov2_formulas, function(f) model.matrix(f, data = full_data)[, -1, drop = FALSE])
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~
R/learner_cmprsk_crr.R:195:81: style: [line_length_linter] Lines should not be more than 80 characters. This line is 103 characters.
        if (nrow(tf_out) != length(uft)) stop("tf output must have rows equal to unique failure times")
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~
R/learner_cmprsk_crr.R:197:81: style: [line_length_linter] Lines should not be more than 80 characters. This line is 89 characters.
          stop(sprintf("tf must return a matrix with %d columns", ncol(as.matrix(cov2))))
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~
R/learner_cmprsk_crr.R:212:81: style: [line_length_linter] Lines should not be more than 80 characters. This line is 85 characters.
      fit_model <- function(target_event, ftime, fstatus, cov1, cov2, tf_final, pv) {
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~
R/learner_cmprsk_crr.R:215:81: style: [line_length_linter] Lines should not be more than 80 characters. This line is 82 characters.
            cmprsk::crr(ftime, fstatus, cov1, failcode = as.integer(target_event),
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~
R/learner_cmprsk_crr.R:218:81: style: [line_length_linter] Lines should not be more than 80 characters. This line is 98 characters.
            cmprsk::crr(ftime, fstatus, cov1, cov2, tf_final, failcode = as.integer(target_event),
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~
R/learner_cmprsk_crr.R:222:81: style: [line_length_linter] Lines should not be more than 80 characters. This line is 91 characters.
          warning(sprintf("Convergence warning for event %s: %s", target_event, w$message))
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~
R/learner_cmprsk_crr.R:223:11: style: [return_linter] Use implicit return behavior; explicit return() is not needed.
          return(NULL)
          ^~~~~~
R/learner_cmprsk_crr.R:225:81: style: [line_length_linter] Lines should not be more than 80 characters. This line is 90 characters.
          stop(sprintf("Failed to train model for event %s: %s", target_event, e$message))
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~
R/learner_cmprsk_crr.R:254:81: style: [line_length_linter] Lines should not be more than 80 characters. This line is 95 characters.
        event_times[[event]] <- if (!is.null(models[[event]])) models[[event]]$uftime else NULL
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~
R/learner_cmprsk_crr.R:263:81: style: [line_length_linter] Lines should not be more than 80 characters. This line is 86 characters.
      self$state$cov2_names <- if (!is.null(cov2)) colnames(as.matrix(cov2)) else NULL
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~
R/learner_cmprsk_crr.R:278:81: style: [line_length_linter] Lines should not be more than 80 characters. This line is 89 characters.
        cov1 <- model.matrix(self$state$cov1_formula, data = newdata)[, -1, drop = FALSE]
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~
R/learner_cmprsk_crr.R:290:81: style: [line_length_linter] Lines should not be more than 80 characters. This line is 118 characters.
        cov2_list <- lapply(self$state$cov2_formulas, function(f) model.matrix(f, data = newdata)[, -1, drop = FALSE])
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
R/learner_cmprsk_crr.R:305:81: style: [line_length_linter] Lines should not be more than 80 characters. This line is 83 characters.
        if (is.null(model)) stop(sprintf("No model available for event %s", event))
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~
R/learner_cmprsk_crr.R:307:81: style: [line_length_linter] Lines should not be more than 80 characters. This line is 89 characters.
          pred_raw <- predict(model, cov1 = cov1, cov2 = cov2, tf = tf, time = all_times)
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~
R/learner_cmprsk_crr.R:315:81: style: [line_length_linter] Lines should not be more than 80 characters. This line is 89 characters.
            if (any(is.na(time_idx))) stop("Predicted times do not match training times")
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~
R/learner_cmprsk_crr.R:335:2: style: [trailing_blank_lines_linter] Add a terminal newline.
)
 ^
R/zzz.R:1:3: style: [commented_code_linter] Remove commented code.
# File: R/zzz.R
  ^~~~~~~~~~~~~
R/zzz.R:7:2: style: [trailing_blank_lines_linter] Add a terminal newline.
}
 ^
tests/testthat.R:1:3: style: [commented_code_linter] Remove commented code.
# tests/testthat.R
  ^~~~~~~~~~~~~~~~
tests/testthat/test-LearnerCompRisksFineGrayCRR.R:18:81: style: [line_length_linter] Lines should not be more than 80 characters. This line is 82 characters.
  task$set_col_roles(cols = "status", add_to = "stratum")  # Add status to stratum
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~
tests/testthat/test-LearnerCompRisksFineGrayCRR.R:19:81: style: [line_length_linter] Lines should not be more than 80 characters. This line is 99 characters.
  task$col_roles$feature <- setdiff(task$feature_names, "status")  # Ensure status is not a feature
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~
tests/testthat/test-LearnerCompRisksFineGrayCRR.R:25:81: style: [line_length_linter] Lines should not be more than 80 characters. This line is 93 characters.
  expect_equal(task$target_names, c("time", "status"))  # Confirm time and status are targets
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~
tests/testthat/test-LearnerCompRisksFineGrayCRR.R:26:81: style: [line_length_linter] Lines should not be more than 80 characters. This line is 84 characters.
  expect_equal(task$col_roles$stratum, "status")  # Confirm status is set as stratum
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~
tests/testthat/test-LearnerCompRisksFineGrayCRR.R:27:81: style: [line_length_linter] Lines should not be more than 80 characters. This line is 89 characters.
  expect_true(is.integer(task$data(cols = "status")$status))  # Confirm status is integer
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~
tests/testthat/test-LearnerCompRisksFineGrayCRR.R:32:81: style: [line_length_linter] Lines should not be more than 80 characters. This line is 96 characters.
  expect_true(exists("new", envir = mlr3proba::LearnerCompRisks))  # Check for learner existence
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~
tests/testthat/test-LearnerCompRisksFineGrayCRR.R:39:81: style: [line_length_linter] Lines should not be more than 80 characters. This line is 115 characters.
  expect_true(exists("PredictionCompRisks", envir = asNamespace("mlr3proba"), inherits = FALSE))  # Debug namespace
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
tests/testthat/test-LearnerCompRisksFineGrayCRR.R:56:81: style: [line_length_linter] Lines should not be more than 80 characters. This line is 84 characters.
  # Test 4: Mixed numeric and factor variables with tf returning a two-column matrix
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~
tests/testthat/test-LearnerCompRisksFineGrayCRR.R:97:81: style: [line_length_linter] Lines should not be more than 80 characters. This line is 82 characters.
  expect_false("bili" %in% cov1_names, "bili should not be in cov1 with cov2only")
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~
tests/testthat/test-LearnerCompRisksFineGrayCRR.R:124:81: style: [line_length_linter] Lines should not be more than 80 characters. This line is 91 characters.
  expect_error(learner_nofeat$train(task_nofeat, part$train), "system is exactly singular")
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~
tests/testthat/test-LearnerCompRisksFineGrayCRR.R:126:5: style: [commented_code_linter] Remove commented code.
  # pred_nofeat <- learner_nofeat$predict(task_nofeat, part$test)
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
tests/testthat/test-LearnerCompRisksFineGrayCRR.R:127:5: style: [commented_code_linter] Remove commented code.
  # expect_s3_class(pred_nofeat, "PredictionCompRisks")
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
tests/testthat/test-LearnerCompRisksFineGrayCRR.R:145:81: style: [line_length_linter] Lines should not be more than 80 characters. This line is 88 characters.
  expect_error(learner_mismatch$train(task, part$train), "tf must return a matrix with")
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~
tests/testthat/test-LearnerCompRisksFineGrayCRR.R:151:5: style: [commented_code_linter] Remove commented code.
  # learner$train(task_empty, integer(0))
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
tests/testthat/test-LearnerCompRisksFineGrayCRR.R:152:5: style: [commented_code_linter] Remove commented code.
  # expect_error(learner$train(task_empty, integer(0)), "empty")
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
tests/testthat/test-LearnerCompRisksFineGrayCRR.R:155:81: style: [line_length_linter] Lines should not be more than 80 characters. This line is 82 characters.
  learner_params <- lrn("cmprsk.crr", maxiter = 50, gtol = 1e-7, parallel = FALSE)
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~
tests/testthat/test-LearnerCompRisksFineGrayCRR.R:169:3: style: [trailing_blank_lines_linter] Add a terminal newline.
})
  ^
> 
