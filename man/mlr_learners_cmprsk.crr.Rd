% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/learner_cmprsk_comprsk_crr.R
\name{mlr_learners_cmprsk.crr}
\alias{mlr_learners_cmprsk.crr}
\alias{LearnerCompRisksFineGrayCRR}
\title{Fine-Gray Competing Risks Regression}
\description{
Fits a Fine-Gray competing risks regression model using
\code{\link[cmprsk:crr]{cmprsk::crr}} from the \code{cmprsk} package.
It estimates cumulative incidence functions (CIFs) for competing risks
scenarios with multiple mutually exclusive events, supporting both fixed
and time-varying covariates. Predictions are generated using
\code{\link[cmprsk:predict.crr]{cmprsk::predict.crr}}, providing CIFs
for specified event types across unique event times from training data.
}
\section{Parameters}{

\describe{
\item{cov2_info}{\code{list()} \cr
Configuration for time-varying covariates. A list with:
\itemize{
\item \code{cov2nms}: Character vector of covariate names (e.g., "age", "bili").
\item \code{tf}: Function transforming time values (returns a matrix).
\item \code{cov2only}: Optional character vector of covariates to exclude from fixed effects.
}
Default is \code{NULL} for fixed covariates only. See vignette or examples in \code{inst/examples/}.
}
\item{maxiter}{\code{integer(1)} \cr
Maximum iterations for \code{\link[cmprsk:crr]{cmprsk::crr}}. Default: 100, range: 1 to 1000.
}
\item{gtol}{\code{numeric(1)} \cr
Convergence tolerance for \code{\link[cmprsk:crr]{cmprsk::crr}}. Default: 1e-6, range: 1e-9 to 1e-3.
}
\item{parallel}{\code{logical(1)} \cr
Use parallel processing via \code{\link[future.apply:future_lapply]{future.apply::future_lapply}}.
Default: \code{FALSE}. Requires \code{future.apply}.
}
\item{init_list}{\code{list()} \cr
Named list of initial values for regression parameters, with one numeric vector per event
(names matching \code{task$cmp_events}). Each vector's length must match the number of
covariates in \code{cov1} (and \code{cov2} if time-varying covariates are used).
Default: \code{NULL} (uses all zeros as per \code{\link[cmprsk:crr]{cmprsk::crr}}).
}
\item{censor_group}{\code{character(1)} \cr
Column name in the task's data specifying groups with different censoring
distributions for \code{\link[cmprsk:crr]{cmprsk::crr}}. Must be a single
valid column name in \code{task$backend}. Default: \code{NULL} (assumes a single
censoring distribution).
}
}
}

\examples{
library(mlr3)
library(mlr3proba)
if (!requireNamespace("cmprsk", quietly = TRUE)) {
  stop("Package 'cmprsk' must be installed")
}
task <- tsk("pbc")
feat <- c("age", "bili", "sex")
task$select(feat)
task$set_col_roles(cols = "status", add_to = "stratum")
learner <- lrn("cmprsk.crr",
  cov2_info = list(
    cov2nms = c("age", "sex"),
    tf = function(uft) cbind(log(uft), log(uft + 1)),
    cov2only = "sex"
  ),
  maxiter = 100,
  gtol = 1e-6,
  parallel = FALSE,
  init_list = list("1" = c(0, 0, 0, 0.1), "2" = c(0, 0, 0, 0.1)),
  censor_group = "edema"
)
learner$train(task)
pred <- learner$predict(task)
learner$convergence()
learner$importance()
# Resampling with stratification
resampling <- rsmp("cv", folds = 3)
rr <- resample(task, learner, resampling)

}
\references{
Fine, J. P., & Gray, R. J. (1999). A Proportional Hazards Model for
the Subdistribution of a Competing Risk. \emph{Journal of the American
Statistical Association}, 94(446), 496--509.
\doi{10.1080/01621459.1999.10474144}
}
\section{Super classes}{
\code{\link[mlr3:Learner]{mlr3::Learner}} -> \code{\link[mlr3proba:LearnerCompRisks]{mlr3proba::LearnerCompRisks}} -> \code{LearnerCompRisksFineGrayCRR}
}
\section{Methods}{
\subsection{Public methods}{
\itemize{
\item \href{#method-LearnerCompRisksFineGrayCRR-new}{\code{LearnerCompRisksFineGrayCRR$new()}}
\item \href{#method-LearnerCompRisksFineGrayCRR-convergence}{\code{LearnerCompRisksFineGrayCRR$convergence()}}
\item \href{#method-LearnerCompRisksFineGrayCRR-importance}{\code{LearnerCompRisksFineGrayCRR$importance()}}
\item \href{#method-LearnerCompRisksFineGrayCRR-clone}{\code{LearnerCompRisksFineGrayCRR$clone()}}
}
}
\if{html}{\out{
<details><summary>Inherited methods</summary>
<ul>
<li><span class="pkg-link" data-pkg="mlr3" data-topic="Learner" data-id="base_learner"><a href='../../mlr3/html/Learner.html#method-Learner-base_learner'><code>mlr3::Learner$base_learner()</code></a></span></li>
<li><span class="pkg-link" data-pkg="mlr3" data-topic="Learner" data-id="configure"><a href='../../mlr3/html/Learner.html#method-Learner-configure'><code>mlr3::Learner$configure()</code></a></span></li>
<li><span class="pkg-link" data-pkg="mlr3" data-topic="Learner" data-id="encapsulate"><a href='../../mlr3/html/Learner.html#method-Learner-encapsulate'><code>mlr3::Learner$encapsulate()</code></a></span></li>
<li><span class="pkg-link" data-pkg="mlr3" data-topic="Learner" data-id="format"><a href='../../mlr3/html/Learner.html#method-Learner-format'><code>mlr3::Learner$format()</code></a></span></li>
<li><span class="pkg-link" data-pkg="mlr3" data-topic="Learner" data-id="help"><a href='../../mlr3/html/Learner.html#method-Learner-help'><code>mlr3::Learner$help()</code></a></span></li>
<li><span class="pkg-link" data-pkg="mlr3" data-topic="Learner" data-id="predict"><a href='../../mlr3/html/Learner.html#method-Learner-predict'><code>mlr3::Learner$predict()</code></a></span></li>
<li><span class="pkg-link" data-pkg="mlr3" data-topic="Learner" data-id="predict_newdata"><a href='../../mlr3/html/Learner.html#method-Learner-predict_newdata'><code>mlr3::Learner$predict_newdata()</code></a></span></li>
<li><span class="pkg-link" data-pkg="mlr3" data-topic="Learner" data-id="print"><a href='../../mlr3/html/Learner.html#method-Learner-print'><code>mlr3::Learner$print()</code></a></span></li>
<li><span class="pkg-link" data-pkg="mlr3" data-topic="Learner" data-id="reset"><a href='../../mlr3/html/Learner.html#method-Learner-reset'><code>mlr3::Learner$reset()</code></a></span></li>
<li><span class="pkg-link" data-pkg="mlr3" data-topic="Learner" data-id="selected_features"><a href='../../mlr3/html/Learner.html#method-Learner-selected_features'><code>mlr3::Learner$selected_features()</code></a></span></li>
<li><span class="pkg-link" data-pkg="mlr3" data-topic="Learner" data-id="train"><a href='../../mlr3/html/Learner.html#method-Learner-train'><code>mlr3::Learner$train()</code></a></span></li>
</ul>
</details>
}}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-LearnerCompRisksFineGrayCRR-new"></a>}}
\if{latex}{\out{\hypertarget{method-LearnerCompRisksFineGrayCRR-new}{}}}
\subsection{Method \code{new()}}{
Creates a new instance of this learner.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{LearnerCompRisksFineGrayCRR$new(
  cov2_info = NULL,
  maxiter = 100L,
  gtol = 1e-06,
  parallel = FALSE,
  init_list = NULL,
  censor_group = NULL
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{cov2_info}}{\code{list()} \cr
Configuration for time-varying covariates. A list with:
\itemize{
\item \code{cov2nms}: Character vector of covariate names (e.g., "age", "bili").
\item \code{tf}: Function transforming time values (returns a matrix).
\item \code{cov2only}: Optional character vector of covariates to exclude from fixed effects.
}
Default is \code{NULL} for fixed covariates only.}

\item{\code{maxiter}}{\code{integer(1)} \cr
Maximum iterations for \code{\link[cmprsk:crr]{cmprsk::crr}}. Default: 100.}

\item{\code{gtol}}{\code{numeric(1)} \cr
Convergence tolerance for \code{\link[cmprsk:crr]{cmprsk::crr}}. Default: 1e-6.}

\item{\code{parallel}}{\code{logical(1)} \cr
Use parallel processing. Default: \code{FALSE}.}

\item{\code{init_list}}{\code{list()} \cr
Initial values for regression parameters per event. Default: \code{NULL}.}

\item{\code{censor_group}}{\code{character(1)} \cr
Column name specifying censoring groups. See class documentation for details.}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-LearnerCompRisksFineGrayCRR-convergence"></a>}}
\if{latex}{\out{\hypertarget{method-LearnerCompRisksFineGrayCRR-convergence}{}}}
\subsection{Method \code{convergence()}}{
Returns a named list indicating convergence status (\code{TRUE}/\code{FALSE}) for each event model.
Raises an error if the model has not been trained.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{LearnerCompRisksFineGrayCRR$convergence()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
A named list with convergence status for each event.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-LearnerCompRisksFineGrayCRR-importance"></a>}}
\if{latex}{\out{\hypertarget{method-LearnerCompRisksFineGrayCRR-importance}{}}}
\subsection{Method \code{importance()}}{
Returns a data frame with coefficient-based variable importance for each event.
Importance is calculated as the absolute value of coefficients divided by their sum per event.
Raises an error if the model has not been trained.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{LearnerCompRisksFineGrayCRR$importance()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
A data frame with columns \code{variable}, \code{importance}, and \code{event}.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-LearnerCompRisksFineGrayCRR-clone"></a>}}
\if{latex}{\out{\hypertarget{method-LearnerCompRisksFineGrayCRR-clone}{}}}
\subsection{Method \code{clone()}}{
The objects of this class are cloneable with this method.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{LearnerCompRisksFineGrayCRR$clone(deep = FALSE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{deep}}{Whether to make a deep clone.}
}
\if{html}{\out{</div>}}
}
}
}
