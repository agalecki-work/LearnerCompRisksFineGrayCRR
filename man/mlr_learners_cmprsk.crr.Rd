% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/learner_cmprisk_regr_finegraycrr.R
\name{mlr_learners_cmprsk.crr}
\alias{mlr_learners_cmprsk.crr}
\alias{LearnerCompRisksFineGrayCRR}
\title{Fine-Gray Competing Risks Regression Learner}
\description{
Fits a Fine-Gray competing risks regression model for estimating cumulative incidence functions (CIFs)
in scenarios with multiple mutually exclusive events. Calls \code{\link[cmprsk:crr]{cmprsk::crr()}} from the \CRANpkg{cmprsk}
package for training and \code{\link[cmprsk:predict.crr]{cmprsk::predict.crr()}} for prediction. Supports both fixed and time-varying
covariates. Variable importance is cause-specific, based on the absolute value of regression coefficients
normalized by their sum per event.
}
\section{Dictionary}{

This \link[mlr3:Learner]{Learner} can be instantiated via \link[mlr3:mlr_sugar]{lrn()}:

\if{html}{\out{<div class="sourceCode">}}\preformatted{lrn("cmprsk.crr")
}\if{html}{\out{</div>}}
}

\section{Meta Information}{

\itemize{
\item Task type: \dQuote{cmprsk}
\item Predict Types: \dQuote{cif}
\item Feature Types: \dQuote{logical}, \dQuote{integer}, \dQuote{numeric}, \dQuote{factor}
\item Required Packages: \CRANpkg{mlr3}, \CRANpkg{mlr3proba}, \CRANpkg{cmprsk}, \CRANpkg{paradox}, \CRANpkg{future.apply}
}
}

\section{Parameters}{
\tabular{lllll}{
   Id \tab Type \tab Default \tab Levels \tab Range \cr
   maxiter \tab integer \tab 100 \tab  \tab \eqn{[1, 1000]}{[1, 1000]} \cr
   gtol \tab numeric \tab 1e-06 \tab  \tab \eqn{[1e-09, 0.001]}{[1e-09, 0.001]} \cr
   parallel \tab logical \tab FALSE \tab TRUE, FALSE \tab - \cr
   cov2_info \tab untyped \tab NULL \tab  \tab - \cr
   init_list \tab untyped \tab NULL \tab  \tab - \cr
   censor_group \tab untyped \tab NULL \tab  \tab - \cr
}
}

\section{Initial parameter values}{

\itemize{
\item \code{maxiter}: Maximum iterations for \code{\link[cmprsk:crr]{cmprsk::crr()}}. Default is 100, range: 1 to 1000.
\item \code{gtol}: Convergence tolerance for \code{\link[cmprsk:crr]{cmprsk::crr()}}. Default is 1e-6, range: 1e-9 to 1e-3.
\item \code{parallel}: Logical indicating whether to use parallel processing via \code{\link[future.apply:future_lapply]{future.apply::future_lapply()}}.
Default is \code{FALSE}.
\item \code{cov2_info}: Configuration for time-varying covariates. Default is \code{NULL} (fixed covariates only).
\item \code{init_list}: Initial values for regression parameters per event. Default is \code{NULL} (uses zeros).
\item \code{censor_group}: Column name specifying groups with different censoring distributions.
Default is \code{NULL} (single censoring distribution).
}
}

\section{Custom mlr3 parameters}{

The following parameters extend the functionality of \code{\link[cmprsk:crr]{cmprsk::crr()}} within the mlr3 framework:
\itemize{
\item \code{parallel}: Enables parallel processing for fitting cause-specific models, not available in the upstream function.
\item \code{cov2_info}: Provides a structured interface for specifying time-varying covariates, simplifying their integration.
\item \code{init_list}: Allows cause-specific initial regression parameters in a single named list, enhancing flexibility.
}
}

\examples{
\dontshow{if (mlr3misc::require_namespaces(c("cmprsk", "future.apply"), quietly = TRUE)) (if (getRversion() >= "3.4") withAutoprint else force)(\{ # examplesIf}
# Define the learner
learner = mlr3::lrn("cmprsk.crr", maxiter = 100, gtol = 1e-6, parallel = FALSE)

# Define a task
task = mlr3::tsk("pbc")
task$select(c("age", "bili", "sex"))
task$set_col_roles(cols = "status", add_to = "stratum")

# Create train and test sets
ids = mlr3::partition(task)

# Train the learner
learner$train(task, row_ids = ids$train)

# Print model and importance
print(learner$model)
print(learner$importance(cause = "1")) # Importance for cause 1
print(learner$importance(cause = "2")) # Importance for cause 2

# Make predictions
predictions = learner$predict(task, row_ids = ids$test)

# Score predictions
predictions$score()
\dontshow{\}) # examplesIf}
}
\references{
Fine, P. J, Gray, J. R (1999).
\dQuote{A proportional hazards model for the subdistribution of a competing risk.}
\emph{Journal of the American Statistical Association}, \bold{94}(446), 496--509.
}
\seealso{
\itemize{
\item \link[mlr3misc:Dictionary]{Dictionary} of \link[mlr3:Learner]{Learners}: \link[mlr3:mlr_learners]{mlr3::mlr_learners}.
\item \code{as.data.table(mlr_learners)} for a table of available \link[mlr3:Learner]{Learners} in the running session (depending on the loaded packages).
\item Chapter in the \href{https://mlr3book.mlr-org.com/}{mlr3book}: \url{https://mlr3book.mlr-org.com/basics.html#learners}
\item \CRANpkg{mlr3learners} for a selection of recommended learners.
\item \CRANpkg{mlr3cluster} for unsupervised clustering learners.
\item \CRANpkg{mlr3pipelines} to combine learners with pre- and postprocessing steps.
\item \CRANpkg{mlr3tuning} for tuning of hyperparameters, \CRANpkg{mlr3tuningspaces} for established default tuning spaces.
}
}
\author{
agalecki
}
\section{Super classes}{
\code{\link[mlr3:Learner]{mlr3::Learner}} -> \code{\link[mlr3proba:LearnerCompRisks]{mlr3proba::LearnerCompRisks}} -> \code{LearnerCompRisksFineGrayCRR}
}
\section{Methods}{
\subsection{Public methods}{
\itemize{
\item \href{#method-LearnerCompRisksFineGrayCRR-new}{\code{LearnerCompRisksFineGrayCRR$new()}}
\item \href{#method-LearnerCompRisksFineGrayCRR-importance}{\code{LearnerCompRisksFineGrayCRR$importance()}}
\item \href{#method-LearnerCompRisksFineGrayCRR-convergence}{\code{LearnerCompRisksFineGrayCRR$convergence()}}
\item \href{#method-LearnerCompRisksFineGrayCRR-clone}{\code{LearnerCompRisksFineGrayCRR$clone()}}
}
}
\if{html}{\out{
<details><summary>Inherited methods</summary>
<ul>
<li><span class="pkg-link" data-pkg="mlr3" data-topic="Learner" data-id="base_learner"><a href='../../mlr3/html/Learner.html#method-Learner-base_learner'><code>mlr3::Learner$base_learner()</code></a></span></li>
<li><span class="pkg-link" data-pkg="mlr3" data-topic="Learner" data-id="configure"><a href='../../mlr3/html/Learner.html#method-Learner-configure'><code>mlr3::Learner$configure()</code></a></span></li>
<li><span class="pkg-link" data-pkg="mlr3" data-topic="Learner" data-id="encapsulate"><a href='../../mlr3/html/Learner.html#method-Learner-encapsulate'><code>mlr3::Learner$encapsulate()</code></a></span></li>
<li><span class="pkg-link" data-pkg="mlr3" data-topic="Learner" data-id="format"><a href='../../mlr3/html/Learner.html#method-Learner-format'><code>mlr3::Learner$format()</code></a></span></li>
<li><span class="pkg-link" data-pkg="mlr3" data-topic="Learner" data-id="help"><a href='../../mlr3/html/Learner.html#method-Learner-help'><code>mlr3::Learner$help()</code></a></span></li>
<li><span class="pkg-link" data-pkg="mlr3" data-topic="Learner" data-id="predict"><a href='../../mlr3/html/Learner.html#method-Learner-predict'><code>mlr3::Learner$predict()</code></a></span></li>
<li><span class="pkg-link" data-pkg="mlr3" data-topic="Learner" data-id="predict_newdata"><a href='../../mlr3/html/Learner.html#method-Learner-predict_newdata'><code>mlr3::Learner$predict_newdata()</code></a></span></li>
<li><span class="pkg-link" data-pkg="mlr3" data-topic="Learner" data-id="print"><a href='../../mlr3/html/Learner.html#method-Learner-print'><code>mlr3::Learner$print()</code></a></span></li>
<li><span class="pkg-link" data-pkg="mlr3" data-topic="Learner" data-id="reset"><a href='../../mlr3/html/Learner.html#method-Learner-reset'><code>mlr3::Learner$reset()</code></a></span></li>
<li><span class="pkg-link" data-pkg="mlr3" data-topic="Learner" data-id="selected_features"><a href='../../mlr3/html/Learner.html#method-Learner-selected_features'><code>mlr3::Learner$selected_features()</code></a></span></li>
<li><span class="pkg-link" data-pkg="mlr3" data-topic="Learner" data-id="train"><a href='../../mlr3/html/Learner.html#method-Learner-train'><code>mlr3::Learner$train()</code></a></span></li>
</ul>
</details>
}}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-LearnerCompRisksFineGrayCRR-new"></a>}}
\if{latex}{\out{\hypertarget{method-LearnerCompRisksFineGrayCRR-new}{}}}
\subsection{Method \code{new()}}{
Creates a new instance of this \link[R6:R6Class]{R6} class.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{LearnerCompRisksFineGrayCRR$new(
  cov2_info = NULL,
  maxiter = 100L,
  gtol = 1e-06,
  parallel = FALSE,
  init_list = NULL,
  censor_group = NULL
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{cov2_info}}{(\code{list()})\cr
Configuration for time-varying covariates. A list with:
\itemize{
\item \code{cov2nms}: Character vector of covariate names (e.g., \code{c("age", "bili")}).
\item \code{tf}: Function transforming time values (returns a matrix).
\item \code{cov2only}: Optional character vector of covariates to exclude from fixed effects.
}
Default is \code{NULL} (fixed covariates only).}

\item{\code{maxiter}}{(\code{integer(1)})\cr
Maximum iterations for \code{\link[cmprsk:crr]{cmprsk::crr()}}. Default: 100, range: 1 to 1000.}

\item{\code{gtol}}{(\code{numeric(1)})\cr
Convergence tolerance for \code{\link[cmprsk:crr]{cmprsk::crr()}}. Default: 1e-6, range: 1e-9 to 1e-3.}

\item{\code{parallel}}{(\code{logical(1)})\cr
Use parallel processing via \code{\link[future.apply:future_lapply]{future.apply::future_lapply()}}. Default: \code{FALSE}.}

\item{\code{init_list}}{(\code{list()})\cr
Named list of initial regression parameter values per event (names match \code{task$cmp_events}).
Each vector's length must match the number of covariates. Default: \code{NULL} (uses zeros).}

\item{\code{censor_group}}{(\code{character(1)})\cr
Column name specifying groups with different censoring distributions. Default: \code{NULL}.}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-LearnerCompRisksFineGrayCRR-importance"></a>}}
\if{latex}{\out{\hypertarget{method-LearnerCompRisksFineGrayCRR-importance}{}}}
\subsection{Method \code{importance()}}{
Extracts cause-specific variable importance based on the absolute value of regression
coefficients normalized by their sum for the specified event. Returns \code{NULL} if the model
for the specified cause is not trained or has not converged.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{LearnerCompRisksFineGrayCRR$importance(cause = 1)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{cause}}{(\code{integer(1)} or \code{character(1)})\cr
The event of interest (must match an event in \code{task$cmp_events}). Default is 1.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
Named \code{numeric()} vector of importance scores, or \code{NULL} if the model is unavailable.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-LearnerCompRisksFineGrayCRR-convergence"></a>}}
\if{latex}{\out{\hypertarget{method-LearnerCompRisksFineGrayCRR-convergence}{}}}
\subsection{Method \code{convergence()}}{
Returns a named list indicating convergence status (\code{TRUE}/\code{FALSE}) for each event model.
Raises an error if the model has not been trained.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{LearnerCompRisksFineGrayCRR$convergence()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
Named \code{list()} with convergence status for each event.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-LearnerCompRisksFineGrayCRR-clone"></a>}}
\if{latex}{\out{\hypertarget{method-LearnerCompRisksFineGrayCRR-clone}{}}}
\subsection{Method \code{clone()}}{
The objects of this class are cloneable with this method.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{LearnerCompRisksFineGrayCRR$clone(deep = FALSE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{deep}}{Whether to make a deep clone.}
}
\if{html}{\out{</div>}}
}
}
}
