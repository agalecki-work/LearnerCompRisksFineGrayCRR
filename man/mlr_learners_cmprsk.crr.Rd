% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/learner_cmprsk_crr.R
\name{mlr_learners_cmprsk.crr}
\alias{mlr_learners_cmprsk.crr}
\alias{LearnerCompRisksFineGrayCRR}
\title{Fine-Gray Competing Risks Regression}
\description{
The learner uses the \code{\link[cmprsk:crr]{cmprsk::crr}} function from the \code{cmprsk} package to fit a Fine-Gray competing risks regression model. This model estimates cumulative incidence functions (CIFs) for competing risks scenarios with multiple mutually exclusive events, supporting both fixed and time-varying covariates. The \code{\link[cmprsk:predict.crr]{cmprsk::predict.crr}} function is used to generate predictions, providing CIFs for specified event types across unique event times from the training data.
}
\section{Methods}{

\describe{
\item{\code{convergence()}}{Returns a named list indicating convergence status for each event model (\code{TRUE}/\code{FALSE}).}
\item{\code{importance()}}{Returns a data frame with coefficient-based variable importance for each event, scaled by absolute coefficient sums.}
}
}

\examples{
library(mlr3)
library(mlr3proba)
task <- tsk("pbc")
task$set_col_roles(cols = "status", add_to = "stratum")
task$select(c("age", "bili", "sex"))
learner <- lrn("cmprsk.crr",
  cov2_info = list(
    cov2nms = c("age", "sex"),
    tf = function(uft) cbind(log(uft), log(uft + 1)),
    cov2only = "sex"
  ),
  maxiter = 100,
  gtol = 1e-6,
  parallel = FALSE
)
learner$train(task)
pred <- learner$predict(task)
print(pred)
learner$convergence()
learner$importance()
}
\references{
Fine, J. P., & Gray, R. J. (1999). A Proportional Hazards Model for the Subdistribution
of a Competing Risk. \emph{Journal of the American Statistical Association}, 94(446), 496--509.
\doi{10.1080/01621459.1999.10474144}
}
\section{Super classes}{
\code{\link[mlr3:Learner]{mlr3::Learner}} -> \code{\link[mlr3proba:LearnerCompRisks]{mlr3proba::LearnerCompRisks}} -> \code{LearnerCompRisksFineGrayCRR}
}
\section{Methods}{
\subsection{Public methods}{
\itemize{
\item \href{#method-LearnerCompRisksFineGrayCRR-new}{\code{LearnerCompRisksFineGrayCRR$new()}}
\item \href{#method-LearnerCompRisksFineGrayCRR-convergence}{\code{LearnerCompRisksFineGrayCRR$convergence()}}
\item \href{#method-LearnerCompRisksFineGrayCRR-importance}{\code{LearnerCompRisksFineGrayCRR$importance()}}
\item \href{#method-LearnerCompRisksFineGrayCRR-clone}{\code{LearnerCompRisksFineGrayCRR$clone()}}
}
}
\if{html}{\out{
<details><summary>Inherited methods</summary>
<ul>
<li><span class="pkg-link" data-pkg="mlr3" data-topic="Learner" data-id="base_learner"><a href='../../mlr3/html/Learner.html#method-Learner-base_learner'><code>mlr3::Learner$base_learner()</code></a></span></li>
<li><span class="pkg-link" data-pkg="mlr3" data-topic="Learner" data-id="configure"><a href='../../mlr3/html/Learner.html#method-Learner-configure'><code>mlr3::Learner$configure()</code></a></span></li>
<li><span class="pkg-link" data-pkg="mlr3" data-topic="Learner" data-id="encapsulate"><a href='../../mlr3/html/Learner.html#method-Learner-encapsulate'><code>mlr3::Learner$encapsulate()</code></a></span></li>
<li><span class="pkg-link" data-pkg="mlr3" data-topic="Learner" data-id="format"><a href='../../mlr3/html/Learner.html#method-Learner-format'><code>mlr3::Learner$format()</code></a></span></li>
<li><span class="pkg-link" data-pkg="mlr3" data-topic="Learner" data-id="help"><a href='../../mlr3/html/Learner.html#method-Learner-help'><code>mlr3::Learner$help()</code></a></span></li>
<li><span class="pkg-link" data-pkg="mlr3" data-topic="Learner" data-id="predict"><a href='../../mlr3/html/Learner.html#method-Learner-predict'><code>mlr3::Learner$predict()</code></a></span></li>
<li><span class="pkg-link" data-pkg="mlr3" data-topic="Learner" data-id="predict_newdata"><a href='../../mlr3/html/Learner.html#method-Learner-predict_newdata'><code>mlr3::Learner$predict_newdata()</code></a></span></li>
<li><span class="pkg-link" data-pkg="mlr3" data-topic="Learner" data-id="print"><a href='../../mlr3/html/Learner.html#method-Learner-print'><code>mlr3::Learner$print()</code></a></span></li>
<li><span class="pkg-link" data-pkg="mlr3" data-topic="Learner" data-id="reset"><a href='../../mlr3/html/Learner.html#method-Learner-reset'><code>mlr3::Learner$reset()</code></a></span></li>
<li><span class="pkg-link" data-pkg="mlr3" data-topic="Learner" data-id="selected_features"><a href='../../mlr3/html/Learner.html#method-Learner-selected_features'><code>mlr3::Learner$selected_features()</code></a></span></li>
<li><span class="pkg-link" data-pkg="mlr3" data-topic="Learner" data-id="train"><a href='../../mlr3/html/Learner.html#method-Learner-train'><code>mlr3::Learner$train()</code></a></span></li>
</ul>
</details>
}}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-LearnerCompRisksFineGrayCRR-new"></a>}}
\if{latex}{\out{\hypertarget{method-LearnerCompRisksFineGrayCRR-new}{}}}
\subsection{Method \code{new()}}{
Creates a new instance of this \link[R6:R6Class]{R6} class.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{LearnerCompRisksFineGrayCRR$new(
  cov2_info = NULL,
  maxiter = 100L,
  gtol = 1e-06,
  parallel = FALSE
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{cov2_info}}{\code{list()} \cr
Configuration for time-varying covariates in the Fine-Gray model. If \code{NULL} (default), all covariates in the task are treated as fixed and included in the \code{cov1} matrix passed to \code{\link[cmprsk:crr]{cmprsk::crr}}. When specified, \code{cov2_info} identifies covariates with time-varying effects (included in the \code{cov2} matrix) and defines how these effects vary over time. This enables modeling of covariate effects that change with time, such as a covariate multiplied by a function of time (e.g., \code{log(time)}). The list must contain:
\describe{
\item{cov2nms}{\code{character()} \cr
Names of covariates from the task's feature set to treat as time-varying. These covariates contribute to the \code{cov2} matrix in \code{\link[cmprsk:crr]{cmprsk::crr}}. Must be a non-empty character vector and a subset of the task's feature names.}
\item{tf}{\verb{function(uft)} \cr
A function specifying the time-varying effect, taking a numeric vector \code{uft} (unique failure times from the training data) and returning a matrix with \code{nrow = length(uft)} and \code{ncol} equal to the number of columns in the \code{cov2} matrix (derived from \code{cov2nms}). For example, \code{function(uft) log(uft)} applies a logarithmic time transformation, or \code{function(uft) cbind(log(uft), uft^2)} applies multiple transformations.}
\item{cov2only}{\code{character()} or \code{NULL} \cr
Optional subset of \code{cov2nms} specifying covariates to be used only in \code{cov2} (time-varying effects) and excluded from \code{cov1} (fixed effects). If \code{NULL} (default), all task features contribute to \code{cov1} unless listed in \code{cov2only}. Must be a subset of \code{cov2nms} or \code{NULL}.}
}
Example: To model the \code{age} covariate with a time-varying effect proportional to \code{log(time)} and exclude \code{sex} from fixed effects, use:
\preformatted{
cov2_info = list(
  cov2nms = c("age", "sex"),
  tf = function(uft) log(uft),
  cov2only = "sex"
)
}
This configuration includes \code{age} in both \code{cov1} (fixed effects) and \code{cov2} (time-varying effects), while \code{sex} is included only in \code{cov2}.}

\item{\code{maxiter}}{\code{integer(1)} \cr
Maximum number of iterations for the \code{\link[cmprsk:crr]{cmprsk::crr}} optimization algorithm. Default is 100, must be between 1 and 1000.}

\item{\code{gtol}}{\code{numeric(1)} \cr
Convergence tolerance for the gradient in \code{\link[cmprsk:crr]{cmprsk::crr}}. Default is 1e-6, must be between 1e-9 and 1e-3.}

\item{\code{parallel}}{\code{logical(1)} \cr
Whether to use parallel processing for fitting models for multiple events using \code{\link[future.apply:future_lapply]{future.apply::future_lapply}}. Default is \code{FALSE}. Requires the \code{future.apply} package.}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-LearnerCompRisksFineGrayCRR-convergence"></a>}}
\if{latex}{\out{\hypertarget{method-LearnerCompRisksFineGrayCRR-convergence}{}}}
\subsection{Method \code{convergence()}}{
Returns convergence status for each event model.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{LearnerCompRisksFineGrayCRR$convergence()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
Named list with \code{TRUE}/\code{FALSE} for each event.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-LearnerCompRisksFineGrayCRR-importance"></a>}}
\if{latex}{\out{\hypertarget{method-LearnerCompRisksFineGrayCRR-importance}{}}}
\subsection{Method \code{importance()}}{
Returns coefficient-based variable importance for each event.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{LearnerCompRisksFineGrayCRR$importance()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
Data frame with columns: variable, importance, event.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-LearnerCompRisksFineGrayCRR-clone"></a>}}
\if{latex}{\out{\hypertarget{method-LearnerCompRisksFineGrayCRR-clone}{}}}
\subsection{Method \code{clone()}}{
The objects of this class are cloneable with this method.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{LearnerCompRisksFineGrayCRR$clone(deep = FALSE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{deep}}{Whether to make a deep clone.}
}
\if{html}{\out{</div>}}
}
}
}
